<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Previsão de Inundação - Canoas, RS</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f0f4f8;
      color: #222;
      max-width: 900px;
      margin: 2rem auto;
      padding: 0 1rem;
    }
    header {
      background-color: #00796b;
      color: white;
      padding: 1rem;
      text-align: center;
      border-radius: 8px;
      margin-bottom: 1rem;
    }
    h1 {
      margin: 0;
    }
    section {
      background: white;
      border-radius: 8px;
      padding: 1rem 1.5rem;
      margin-bottom: 1.5rem;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    .alert {
      background-color: #ffccbc;
      border-left: 6px solid #d84315;
      padding: 1rem;
      font-weight: bold;
      color: #5d2600;
      margin-bottom: 1rem;
      border-radius: 6px;
    }
    .weather-data p {
      margin: 0.3rem 0;
      font-size: 1.1rem;
    }
    form {
      margin-bottom: 1rem;
      display: flex;
      gap: 0.5rem;
      justify-content: center;
    }
    input[type="text"] {
      padding: 0.5rem;
      font-size: 1rem;
      border-radius: 5px;
      border: 1px solid #ccc;
      width: 200px;
    }
    button {
      padding: 0.5rem 1rem;
      background-color: #00796b;
      color: white;
      border: none;
      border-radius: 5px;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background-color: #004d40;
    }
    /* Estilo para a imagem interativa */
    .interactive-image {
      display: block;
      margin: 1rem auto 0 auto;
      max-width: 250px;
      cursor: pointer;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      transition: transform 0.3s ease;
    }
    .interactive-image:hover {
      transform: scale(1.05);
    }
  </style>
</head>
<body>
  <header>
    <h1>Previsão de Inundação - Canoas, RS</h1>
  </header>

  <section id="alert-section">
    <h2>Alertas da Defesa Civil</h2>
    <div class="alert" role="alert" aria-live="assertive">
      Situação de emergência decretada devido a alagamentos e chuvas intensas desde 17/06/2025.<br />
      Mantenha-se informado e siga as orientações da Defesa Civil.
    </div>
    <!-- Imagem interativa clicável -->
    <a href="https://grd.defesacivil.rs.gov.br" target="_blank" rel="noopener" aria-label="Site oficial da Defesa Civil do Rio Grande do Sul">
      <img
        src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Defesa_Civil_Brasil_logo.svg/600px-Defesa_Civil_Brasil_logo.svg.png"
        alt="Logo da Defesa Civil do Rio Grande do Sul"
        class="interactive-image"
      />
    </a>
  </section>

  <section id="weather-section">
    <h2>Previsão do Tempo Atual</h2>
    <form id="city-form">
      <input type="text" id="city-input" placeholder="Digite o nome da cidade" value="Canoas" />
      <button type="submit">Buscar</button>
    </form>
    <div class="weather-data" aria-live="polite">
      <p>Carregando dados meteorológicos...</p>
    </div>
  </section>

  <section id="info-section">
    <h2>Informações Importantes</h2>
    <ul>
      <li>Canoas decretou situação de emergência devido a alagamentos que atingiram cerca de 35% do território, com mais de 100 pessoas desabrigadas e 500 desalojadas (junho/2025).</li>
      <li>Equipes da Defesa Civil monitoram pontos críticos e atuam com hidrojateamento para desobstrução da rede de drenagem.</li>
      <li>Áreas mais afetadas: bairros Mathias Velho, Harmonia, Niterói, Olaria, entre outros.</li>
      <li>Contato da Defesa Civil: telefone <strong>199</strong>.</li>
    </ul>
  </section>

  <script>
    const apiKey = 'SUA_API_KEY_AQUI'; // Substitua pela sua chave da OpenWeatherMap

    const form = document.getElementById('city-form');
    const cityInput = document.getElementById('city-input');
    const weatherDiv = document.querySelector('.weather-data');

    async function fetchWeather(city) {
      weatherDiv.innerHTML = '<p>Carregando dados meteorológicos...</p>';
      try {
        const response = await fetch(
          `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city)}&lang=pt_br&units=metric&appid=${apiKey}`
        );
        if (!response.ok) {
          throw new Error('Cidade não encontrada');
        }
        const data = await response.json();

        weatherDiv.innerHTML = `
          <p><strong>Cidade:</strong> ${data.name}, ${data.sys.country}</p>
          <p><strong>Condição:</strong> ${data.weather[0].description}</p>
          <p><strong>Temperatura:</strong> ${data.main.temp.toFixed(1)} °C</p>
          <p><strong>Umidade:</strong> ${data.main.humidity}%</p>
          <p><strong>Velocidade do vento:</strong> ${data.wind.speed} m/s</p>
        `;
      } catch (error) {
        weatherDiv.innerHTML = `<p style="color:red;">Erro: ${error.message}</p>`;
      }
    }

    form.addEventListener('submit', e => {
      e.preventDefault();
      const city = cityInput.value.trim();
      if (city) {
        fetchWeather(city);
      }
    });

    // Carrega dados de Canoas ao abrir a página
    fetchWeather('Canoas');
  </script>
</body>
</html>
